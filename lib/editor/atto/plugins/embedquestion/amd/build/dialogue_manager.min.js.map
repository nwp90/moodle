{"version":3,"sources":["../src/dialogue_manager.js"],"names":["define","$","Notification","Fragment","Templates","Ajax","DialogueHandler","button","currentSelection","dialogue","existingCode","get","getSelection","getDialogue","headerContent","M","util","get_string","focusAfterHide","set","image_url","show","getEmbedCodeAtSelection","embedCode","loadFragment","contextId","done","html","js","niceReplaceNodeContents","fail","exception","node","promise","Deferred","fadeOut","replaceNodeContents","fadeIn","resolve","on","getEmbedCode","setupCentreing","centerDialogue","observer","MutationObserver","dialogueResized","each","index","observe","attributes","attributeFilter","e","preventDefault","call","methodname","args","courseid","val","categoryidnumber","questionidnumber","behaviour","maxmark","variant","correctness","marks","markdp","feedback","generalfeedback","rightanswer","history","insertEmbedCode","host","parent","text","hide","setSelection","getSelectionParentNode","textContent","slice","start","end","insertContentAtFocusPoint","markUpdated","showDialogueFor"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manages the question selection form.\n *\n * @module    atto_embedquestion/dialogue_manager\n * @package   atto_embedquestion\n * @copyright 2018 The Open University\n * @license   http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine([\n    'jquery',\n    'core/notification',\n    'core/fragment',\n    'core/templates',\n    'core/ajax'\n], function(\n    $,\n    Notification,\n    Fragment,\n    Templates,\n    Ajax\n) {\n    'use strict';\n\n    /**\n     * Constructor for an object that handles one occurrence of showing the dialogue.\n     *\n     * @param {EditorPlugin} button - the editor toolbar button that has just been clicked.\n     */\n    function DialogueHandler(button) {\n        var currentSelection, dialogue, existingCode;\n\n        currentSelection = button.get('host').getSelection();\n\n        // The wrapper div's loading icon will be replaced with form contents.\n        dialogue = button.getDialogue({\n            headerContent: M.util.get_string('pluginname', 'atto_embedquestion'),\n            focusAfterHide: true\n        }, true);\n        dialogue.set('bodyContent', '<div class=\"atto_embedquestion-wrap\">' +\n                '<img class=\"icon\" src=\"' + M.util.image_url('y/loading') + '\" alt=\"' +\n                M.util.get_string('loading', 'atto_embedquestion') + '\">' +\n                '</div>');\n        dialogue.show();\n\n        existingCode = button.getEmbedCodeAtSelection();\n        if (existingCode) {\n            existingCode = existingCode.embedCode;\n        }\n\n        // Replace with the form.\n        Fragment.loadFragment('atto_embedquestion', 'questionselector', button.get('contextid'),\n                {contextId: button.get('contextid'), embedCode: existingCode}\n                ).done(function(html, js) {\n                    niceReplaceNodeContents($('.atto_embedquestion-wrap'), html, js, dialogue);\n                }\n                ).fail(Notification.exception);\n\n        /**\n         * This function fades out one lot of content and fades in some new content.\n         *\n         * @param {JQuery} node - Element or selector to replace.\n         * @param {String} html - HTML to insert / replace.\n         * @param {String} js - Javascript to run after the insertion.\n         * @returns {Promise} - a promise that resolves when the animation is complete.\n         */\n        function niceReplaceNodeContents(node, html, js) {\n            var promise = $.Deferred();\n            node.fadeOut(\"fast\", function() {\n                Templates.replaceNodeContents(node, html, js);\n                node.fadeIn(\"fast\", function() {\n                    promise.resolve();\n                    $('#embedqform #id_submitbutton').on('click', getEmbedCode);\n                    setupCentreing();\n                });\n            });\n            return promise.promise();\n        }\n\n        /**\n         * Called after the form in the dialogue has finished loading.\n         *\n         * Centre the dialogue now, and ensure it re-centres whenever a\n         * form section is expanded or collapsed.\n         */\n        function setupCentreing() {\n            dialogue.centerDialogue();\n            var observer = new MutationObserver(dialogueResized);\n            $('#embedqform fieldset.collapsible').each(function(index, node) {\n                observer.observe(node, { attributes: true, attributeFilter: ['class'] });\n            });\n        }\n\n        /**\n         * Re-centre the dialogue.\n         */\n        function dialogueResized() {\n            dialogue.centerDialogue();\n        }\n\n        /**\n         * Handler for when the form button is clicked.\n         *\n         * Make an AJAX request ot the server to get the embed code.\n         *\n         * @param {Event} e - the click event.\n         */\n        function getEmbedCode(e) {\n            e.preventDefault();\n            Ajax.call([{\n                methodname: 'filter_embedquestion_get_embed_code',\n                args: {\n                    courseid: $('input[name=courseid]').val(),\n                    categoryidnumber: $('select#id_categoryidnumber').val(),\n                    questionidnumber: $('select#id_questionidnumber').val(),\n                    behaviour: $('select#id_behaviour').val(),\n                    maxmark: $('input#id_maxmark').val(),\n                    variant: $('input#id_variant').val(),\n                    correctness: $('select#id_correctness').val(),\n                    marks: $('select#id_marks').val(),\n                    markdp: $('select#id_markdp').val(),\n                    feedback: $('select#id_feedback').val(),\n                    generalfeedback: $('select#id_generalfeedback').val(),\n                    rightanswer: $('select#id_rightanswer').val(),\n                    history: $('select#id_history').val()\n                }\n            }])[0].done(insertEmbedCode);\n        }\n\n        /**\n         * Handles when we get the embed code from the AJAX request.\n         *\n         * @param {String} embedCode - the embed code to insert.\n         */\n        function insertEmbedCode(embedCode) {\n            var dialogue, host, parent, text, existingCode;\n\n            // Hide the dialogue and blank the contents.\n            dialogue = button.getDialogue({\n                focusAfterHide: null\n            });\n            dialogue.hide();\n\n            host = button.get('host');\n\n            // Focus on the last point.\n            host.setSelection(currentSelection);\n\n            existingCode = button.getEmbedCodeAtSelection();\n            if (existingCode) {\n                // Replace the existing code.\n                parent = host.getSelectionParentNode();\n                text = parent.textContent;\n                parent.textContent = text.slice(0, existingCode.start) +\n                        embedCode + text.slice(existingCode.end);\n            } else {\n                // Otherwise insert the embed code.\n                host.insertContentAtFocusPoint(embedCode);\n            }\n\n            // Mark the text area as updated.\n            button.markUpdated();\n        }\n    }\n\n    return {\n        /**\n         * Show the dialogue when the button in a particular editor was clicked,\n         * then handle the interaction with it.\n         *\n         * @param {EditorPlugin} button - the editor toolbar button that has just been clicked.\n         */\n        showDialogueFor: function(button) {\n            new DialogueHandler(button);\n        }\n    };\n});\n"],"file":"dialogue_manager.min.js"}