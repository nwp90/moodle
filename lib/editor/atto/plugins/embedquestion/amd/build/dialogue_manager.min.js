define ("atto_embedquestion/dialogue_manager",["jquery","core/notification","core/fragment","core/templates","core/ajax"],function(a,b,c,d,f){'use strict';function g(e){var l,m,n;l=e.get("host").getSelection();m=e.getDialogue({headerContent:M.util.get_string("pluginname","atto_embedquestion"),focusAfterHide:!0},!0);m.set("bodyContent","<div class=\"atto_embedquestion-wrap\"><img class=\"icon\" src=\""+M.util.image_url("y/loading")+"\" alt=\""+M.util.get_string("loading","atto_embedquestion")+"\"></div>");m.show();n=e.getEmbedCodeAtSelection();if(n){n=n.embedCode}c.loadFragment("atto_embedquestion","questionselector",e.get("contextid"),{contextId:e.get("contextid"),embedCode:n}).done(function(b,c){g(a(".atto_embedquestion-wrap"),b,c,m)}).fail(b.exception);function g(b,c,e){var f=a.Deferred();b.fadeOut("fast",function(){d.replaceNodeContents(b,c,e);b.fadeIn("fast",function(){f.resolve();a("#embedqform #id_submitbutton").on("click",j);h()})});return f.promise()}function h(){m.centerDialogue();var b=new MutationObserver(i);a("#embedqform fieldset.collapsible").each(function(a,c){b.observe(c,{attributes:!0,attributeFilter:["class"]})})}function i(){m.centerDialogue()}function j(b){b.preventDefault();f.call([{methodname:"filter_embedquestion_get_embed_code",args:{courseid:a("input[name=courseid]").val(),categoryidnumber:a("select#id_categoryidnumber").val(),questionidnumber:a("select#id_questionidnumber").val(),behaviour:a("select#id_behaviour").val(),maxmark:a("input#id_maxmark").val(),variant:a("input#id_variant").val(),correctness:a("select#id_correctness").val(),marks:a("select#id_marks").val(),markdp:a("select#id_markdp").val(),feedback:a("select#id_feedback").val(),generalfeedback:a("select#id_generalfeedback").val(),rightanswer:a("select#id_rightanswer").val(),history:a("select#id_history").val()}}])[0].done(k)}function k(a){var b,c,d,f,g;b=e.getDialogue({focusAfterHide:null});b.hide();c=e.get("host");c.setSelection(l);g=e.getEmbedCodeAtSelection();if(g){d=c.getSelectionParentNode();f=d.textContent;d.textContent=f.slice(0,g.start)+a+f.slice(g.end)}else{c.insertContentAtFocusPoint(a)}e.markUpdated()}}return{showDialogueFor:function showDialogueFor(a){new g(a)}}});
//# sourceMappingURL=dialogue_manager.min.js.map
